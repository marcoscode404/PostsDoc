{"ast":null,"code":"import _regeneratorRuntime from \"/home/ultra/\\xC1rea de Trabalho/PostsDoc/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/ultra/\\xC1rea de Trabalho/PostsDoc/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/ultra/\\xC1rea de Trabalho/PostsDoc/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/ultra/\\xC1rea de Trabalho/PostsDoc/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/home/ultra/\\xC1rea de Trabalho/PostsDoc/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable prettier/prettier */\n\n/* eslint-disable no-param-reassign */\n\n/* eslint-disable no-return-assign */\n\n/* eslint-disable react/no-danger */\nimport Head from 'next/head';\nimport { FiCalendar, FiClock, FiUser } from 'react-icons/fi';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport Link from 'next/link';\nimport { useState } from 'react';\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport Header from '../components/Header';\nimport Slides from '../components/sliders';\nimport Footer from '../components/Footer';\nexport var __N_SSG = true;\nexport default function Home(_ref) {\n  _s();\n\n  var _this = this;\n\n  var postsPagination = _ref.postsPagination,\n      preview = _ref.preview;\n\n  function getReadTime(item) {\n    var totalWords = item.data.content.reduce(function (total, contentItem) {\n      total += contentItem.heading.split(' ').length;\n      var words = contentItem.body.map(function (i) {\n        return i.text.split(' ').length;\n      });\n      words.map(function (word) {\n        return total += word;\n      });\n      return total;\n    }, 0);\n    return Math.ceil(totalWords / 200);\n  }\n\n  var formattedPost = postsPagination.results.map(function (post) {\n    var readTime = getReadTime(post);\n    return _objectSpread(_objectSpread({}, post), {}, {\n      data: _objectSpread(_objectSpread({}, post.data), {}, {\n        readTime: readTime\n      }),\n      first_publication_date: format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n        locale: ptBR\n      })\n    });\n  });\n\n  var _useState = useState(formattedPost),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState(postsPagination.next_page),\n      nextPage = _useState2[0],\n      setNextPage = _useState2[1];\n\n  var _useState3 = useState(1),\n      currentPage = _useState3[0],\n      setCurrentPage = _useState3[1];\n\n  function handleNextPage() {\n    return _handleNextPage.apply(this, arguments);\n  }\n\n  function _handleNextPage() {\n    _handleNextPage = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var postsResults, newPosts;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(currentPage !== 1 && nextPage === null)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              _context.next = 4;\n              return fetch(\"\".concat(nextPage)).then(function (response) {\n                return response.json();\n              });\n\n            case 4:\n              postsResults = _context.sent;\n              setNextPage(postsResults.next_page);\n              setCurrentPage(postsResults.page);\n              newPosts = postsResults.results.map(function (post) {\n                var readTime = getReadTime(post);\n                return {\n                  uid: post.uid,\n                  first_publication_date: format(new Date(post.first_publication_date), 'dd MMM yyyy', {\n                    locale: ptBR\n                  }),\n                  data: {\n                    title: post.data.title,\n                    subtitle: post.data.subtitle,\n                    author: post.data.author,\n                    banner: {\n                      url: post.data.banner.url\n                    },\n                    readTime: readTime\n                  }\n                };\n              }); // pega os itens do array, faz uma copia do que já tem e cria uma nova lista\n              // só adicionando o novo post, sem precisar recarregar a list de post do zero\n\n              setPosts([].concat(_toConsumableArray(posts), _toConsumableArray(newPosts)));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleNextPage.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Home | ColabDevs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: commonStyles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Slides, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.posts,\n        children: [posts.map(function (post) {\n          return /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/post/\".concat(post.uid),\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: styles.post,\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: post.data.banner.url,\n                className: styles.image,\n                alt: \"imagensPosts\"\n              }, post.uid, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.titlePosts,\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: post.data.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.titlePosts,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: post.data.subtitle\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(FiCalendar, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 25\n                    }, _this), post.first_publication_date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(FiUser, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 164,\n                      columnNumber: 25\n                    }, _this), post.data.author]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 25\n                    }, _this), \"\".concat(post.data.readTime, \" min\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, _this)\n          }, post.uid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, _this);\n        }), nextPage && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.ButtonPosts,\n          type: \"button\",\n          onClick: handleNextPage,\n          children: \"Carregar mais posts ...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"aside\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          href: \"/api/exit-preview\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: commonStyles.preview,\n            children: \"Sair do modo Preview\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"ch4AWwlU+jaBQbBmaGZ2mjD8XD4=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/ultra/Área de Trabalho/PostsDoc/src/pages/index.tsx"],"names":["Head","FiCalendar","FiClock","FiUser","format","ptBR","Link","useState","commonStyles","styles","Header","Slides","Footer","Home","postsPagination","preview","getReadTime","item","totalWords","data","content","reduce","total","contentItem","heading","split","length","words","body","map","i","text","word","Math","ceil","formattedPost","results","post","readTime","first_publication_date","Date","locale","posts","setPosts","next_page","nextPage","setNextPage","currentPage","setCurrentPage","handleNextPage","fetch","then","response","json","postsResults","page","newPosts","uid","title","subtitle","author","banner","url","container","image","titlePosts","ButtonPosts"],"mappings":"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","sourcesContent":["/* eslint-disable prettier/prettier */\n/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\n/* eslint-disable react/no-danger */\nimport { GetStaticProps } from 'next';\nimport Head from 'next/head';\nimport { FiCalendar, FiClock, FiUser } from 'react-icons/fi';\nimport Prismic from '@prismicio/client';\nimport { format } from 'date-fns';\nimport { ptBR } from 'date-fns/locale';\nimport Link from 'next/link';\nimport { ReactElement, useState } from 'react';\nimport { getPrismicClient } from '../services/prismic';\n\nimport commonStyles from '../styles/common.module.scss';\nimport styles from './home.module.scss';\nimport Header from '../components/Header';\nimport Slides from '../components/sliders';\nimport Footer from '../components/Footer';\n\ninterface Post {\n  uid?: string;\n  first_publication_date: string | null;\n  data: {\n    title: string;\n    banner: {\n      url: string;\n    };\n    subtitle: string;\n    author: string;\n    readTime: number;\n    content: {\n      heading: string;\n      body: {\n        text: string;\n      }[];\n    }[];\n  };\n}\n\ninterface PostPagination {\n  next_page: string;\n  results: Post[];\n  banner: {\n    url: string;\n  };\n}\n\ninterface HomeProps {\n  postsPagination: PostPagination;\n  preview: boolean;\n}\n\nexport default function Home({\n  postsPagination,\n  preview,\n}: HomeProps): ReactElement {\n  function getReadTime(item: Post): number {\n    const totalWords = item.data.content.reduce((total, contentItem) => {\n      total += contentItem.heading.split(' ').length;\n\n      const words = contentItem.body.map(i => i.text.split(' ').length);\n      words.map(word => (total += word));\n      return total;\n    }, 0);\n    return Math.ceil(totalWords / 200);\n  }\n\n  const formattedPost = postsPagination.results.map(post => {\n    const readTime = getReadTime(post);\n\n    return {\n      ...post,\n      data: {\n        ...post.data,\n        readTime,\n      },\n      first_publication_date: format(\n        new Date(post.first_publication_date),\n        'dd MMM yyyy',\n        {\n          locale: ptBR,\n        }\n      ),\n    };\n  });\n\n  const [posts, setPosts] = useState<Post[]>(formattedPost);\n  const [nextPage, setNextPage] = useState(postsPagination.next_page);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  async function handleNextPage(): Promise<void> {\n    if (currentPage !== 1 && nextPage === null) {\n      return;\n    }\n\n    const postsResults = await fetch(`${nextPage}`).then(response =>\n      response.json()\n    );\n    setNextPage(postsResults.next_page);\n    setCurrentPage(postsResults.page);\n\n    const newPosts = postsResults.results.map((post: Post) => {\n      const readTime = getReadTime(post);\n\n      return {\n        uid: post.uid,\n        first_publication_date: format(\n          new Date(post.first_publication_date),\n          'dd MMM yyyy',\n          {\n            locale: ptBR,\n          }\n        ),\n        data: {\n          title: post.data.title,\n          subtitle: post.data.subtitle,\n          author: post.data.author,\n          banner: {\n            url: post.data.banner.url,\n          },\n          readTime,\n        },\n      };\n    });\n\n    // pega os itens do array, faz uma copia do que já tem e cria uma nova lista\n    // só adicionando o novo post, sem precisar recarregar a list de post do zero\n    setPosts([...posts, ...newPosts]);\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Home | ColabDevs</title>\n      </Head>\n\n      <main className={commonStyles.container}>\n        {/* componente Header */}\n        <Header />\n\n        {/* componente de Sliders */}\n        <Slides />\n\n          <div className={styles.posts}>\n\n            {posts.map(post => (\n              <Link href={`/post/${post.uid}`} key={post.uid}>\n                <a className={styles.post}>\n                  <img src={post.data.banner.url} key={post.uid}  className={styles.image} alt=\"imagensPosts\"/>\n\n                  <div className={styles.titlePosts}>\n                    <strong>{post.data.title}</strong>\n                  </div>\n\n                  <div className={styles.titlePosts}>\n                    <p>{post.data.subtitle}</p>\n                    <ul>\n                      <li>\n                        <FiCalendar />\n                        {post.first_publication_date}\n                      </li>\n                      <li>\n                        <FiUser />\n                        {post.data.author}\n                      </li>\n                      <li>\n                        <FiClock />\n                        {`${post.data.readTime} min`}\n                      </li>\n                    </ul>\n                  </div>\n                </a>\n              </Link>\n            ))\n            }\n\n              {/* botao de carregar novos posts */}\n            {nextPage && (\n              <button className={styles.ButtonPosts} type=\"button\" onClick={handleNextPage}>\n                Carregar mais posts ...\n              </button>\n            )}\n          </div>\n\n        {preview && (\n          <aside>\n            <Link href=\"/api/exit-preview\">\n              <a className={commonStyles.preview}>Sair do modo Preview</a>\n            </Link>\n          </aside>\n        )}\n\n        {/* Footer */}\n        <Footer />\n      </main>\n\n    </>\n  );\n}\n\nexport const getStaticProps: GetStaticProps = async ({ preview = false }) => {\n  const prismic = getPrismicClient();\n\n  const postsResponse = await prismic.query(\n    [Prismic.Predicates.at('document.type', 'posts')],\n    {\n      pageSize: 3,\n      orderings: '[document.last_publication_date desc]',\n    }\n  );\n\n  const posts = postsResponse.results.map(post => {\n    return {\n      uid: post.uid,\n      first_publication_date: post.first_publication_date,\n      data: {\n        title: post.data.title,\n        subtitle: post.data.subtitle,\n        author: post.data.author,\n        banner: {\n          url: post.data.banner.url,\n        },\n        content: post.data.content.map(content => {\n          return {\n            heading: content.heading,\n            body: [...content.body],\n          };\n        }),\n      },\n    };\n  });\n\n  const postsPagination = {\n    next_page: postsResponse.next_page,\n    results: posts,\n  };\n\n  return {\n    props: {\n      postsPagination,\n      preview,\n    },\n    revalidate: 1800,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}